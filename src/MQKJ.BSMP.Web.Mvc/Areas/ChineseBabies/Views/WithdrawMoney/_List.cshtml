@using MQKJ.BSMP.Web.Startup
@using X.PagedList
@using X.PagedList.Mvc.Common;
@using X.PagedList.Mvc.Core
@using Microsoft.EntityFrameworkCore.Internal
@using MQKJ.BSMP.EnumHelper
@model StaticPagedList<MQKJ.BSMP.Common.Dtos.EnterpirsePaymentRecordListDto>

@{
    var snStart = ((Model.PageNumber - 1) * Model.PageSize);
}
<link href="~/view-resources/Views/WithdrawMoney/list.css" rel="stylesheet" />
<table class="table">
    <thead>
        <tr>
            <th>创建日期</th>
            <th>代理人Id</th>
            <th>提现用户</th>
            <th>微信昵称</th>
            <th>头像</th>
            <th>身份</th>
            <th>提现金额</th>
            <th>提现状态</th>
            <th>申请提现方式</th>
            <th>最终提现方式</th>
            <th>商户订单号</th>
            <th>订单号</th>
            <th>提现日期</th>
            <th width="10%">操作</th>
        </tr>
    </thead>
    <tbody>
        @{
            foreach (var item in Model)
            {
                <tr>
                    @*
                        <td>@(Model.IndexOf(item) + snStart + 1)</td>*@
                    <td>@item.CreationTime</td>
                    <td>@item.AgentId</td>
                    <td>@item.MqAgent.UserName</td>
                    <td>@item.MqAgent.NickName</td>
                    <td><img src="@item.MqAgent.HeadUrl" class="user-header-img" /></td>
                    <td>@EnumHelper.GetDescription(item.MqAgent.Level)</td>
                    <td style="color:red;font-weight:bold;font-size:14px">@item.Amount</td>
                    <td>@EnumHelper.GetDescription(item.State)</td>
                    <td>@EnumHelper.GetDescription(item.RequestPlatform)</td>
                    <td>@EnumHelper.GetDescription(item.WithdrawMoneyType)</td>
                    <td>@item.OutTradeNo</td>
                    <td>@item.PaymentNo</td>
                    @{
                        if (item.PaymentTime == null)
                        {
                            <td>无</td>
                        }
                        else
                        {
                            if (item.PaymentTime.Date == Convert.ToDateTime("0001-01-01 00:00:00").Date)
                            {
                                <td>无</td>
                            }
                            else
                            {
                                <td>@item.PaymentTime</td>
                            }

                        }
                        if (item.State == MQKJ.BSMP.Common.WithdrawDepositState.Success)
                        {
                            <td>成功</td>
                        }
                        else if (item.State == MQKJ.BSMP.Common.WithdrawDepositState.Refuse)
                        {
                            <td>已拒绝</td>
                        }
                        else if (item.State == MQKJ.BSMP.Common.WithdrawDepositState.Fail || item.State == MQKJ.BSMP.Common.WithdrawDepositState.ThirdPartyFail)
                        {
                            <td>失败</td>
                        }
                        else
                        {
                            <td class="dropdown">
                                <a href="javascript:void(-1);" class="dropdown-toggle" data-toggle="dropdown" role="button" aria-haspopup="true" aria-expanded="false">
                                    <i class="material-icons">menu</i>
                                </a>
                                <ul class="dropdown-menu">
                                    @*
                                        <li><a href="#" class="waves-effect waves-block applyPassed" data-withDrawMoney-id="@item.Id"><i class="material-icons">edit</i>内部微信通道</a></li>*@
                                    @if (item.State == MQKJ.BSMP.Common.WithdrawDepositState.Auditing)
                                    {
                                        <li><a href="#" class="waves-effect waves-block applyPassedByCloudPlatform" data-withDrawMoney-id="@item.Id"><i class="material-icons">edit</i>通过</a></li>
                                        <li><a href="#" class="waves-effect waves-block refusePass" data-withDrawMoney-id="@item.Id"><i class="material-icons">edit</i>拒绝</a></li>
                                    }
                                    <li><a href="#" class="waves-effect waves-block ManualPass" data-withDrawMoney-id="@item.Id"><i class="material-icons">edit</i>标记为成功（手动）</a></li>
                                    <li data-withDrawMoney-id="@item.Id">
                                        <a href="#" class="waves-effect waves-block ManualFail" data-withDrawMoney-id="@item.Id"><i class="material-icons">edit</i>标记为失败</a>
                                    </li>
                                    @*<li data-withDrawMoney-id="@item.Id" class="">查询状态（暂未开发）</li>*@
                                    @if (item.State == MQKJ.BSMP.Common.WithdrawDepositState.Auditing)
                                    {
                                        <li class="divider"></li>
                                        <li class="dropdown-submenu pull-left">
                                            <a href="#" class="dropdown-toggle" data-toggle="morePayType" aria-haspopup="true" aria-expanded="false">更多通道</a>
                                            <ul class="dropdown-menu" id="morePayType">
                                                <li><a href="#" class="waves-effect waves-block applyPassedByCloudPlatform" data-withDrawMoney-id="@item.Id" data-request-payType="2"><i class="material-icons">edit</i>支付宝</a></li>
                                                <li><a href="#" class="waves-effect waves-block applyPassedByCloudPlatform" data-withDrawMoney-id="@item.Id" data-request-payType="3"><i class="material-icons">edit</i>银行卡</a></li>
                                            </ul>
                                        </li>
                                    }
                                </ul>
                            </td>
                        }
                    }
                </tr>
            }
        }
    </tbody>
</table>
@*@Html.PagedListPager((IPagedList)Model, page => Url.Action("Index", new { page,
    userName = ViewData["userName"],
    startTime = ViewData["StartTime"],
    endTime = ViewData["EndTime"],
    withdrawMoneyState = ViewData["WithdrawMoneyState"]
    })
    , new PagedListRenderOptions { DisplayLinkToNextPage = PagedListDisplayMode.Never,
    DisplayLinkToPreviousPage = PagedListDisplayMode.Never, LinkToFirstPageFormat = "1",
    LinkToPreviousPageFormat = "上一页", LinkToLastPageFormat = Model.PageCount.ToString()
    })*@
@*@Html.PagedListPager((IPagedList<string>
    )ViewBag.Names, page => Url.Action("Index", new { page }), PagedListRenderOptions.EnableUnobtrusiveAjaxReplacing(new PagedListRenderOptions {
    MaximumPageNumbersToDisplay = 5,
    DisplayPageCountAndCurrentLocation = true,
    UlElementClasses = new[] { "pagination" },
    ContainerDivClasses = new[] { "_List" } },
    new AjaxOptions() { HttpMethod = "GET", UpdateTargetId = "dataList"
    }))*@


@Html.PagedListPager((IPagedList)Model, page => Url.Action("Index", new { page }), new PagedListRenderOptions()
{
DisplayLinkToFirstPage = PagedListDisplayMode.Always,
DisplayLinkToLastPage = PagedListDisplayMode.Always,
DisplayLinkToPreviousPage = PagedListDisplayMode.Never,
DisplayLinkToNextPage = PagedListDisplayMode.Never,
LinkToFirstPageFormat = "首页",
LinkToLastPageFormat = "末页",
DisplayPageCountAndCurrentLocation = true,
PageCountAndCurrentLocationFormat = "每页" + Model.Count + "条共{1}页",
//DisplayItemSliceAndTotal = true,
//ItemSliceAndTotalFormat = "每页{1}条"
})


<style type="text/css">
    .PagedList-pageCountAndLocation {
        position: absolute;
        right: 20px;
        /*color:red !important;*/
    }
</style>


